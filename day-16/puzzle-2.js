const input = `\\..\\......-.....-..-./...........-......../.........................\\........../.........\\....../.........||..
|...../............|...\\.............\\.......\\............/..............-.../.........\\......\\\\....\\.........
...............|...................../..|.....\\.\\....|.........../......................../-......-.....\\-|...
..........-...................................-..\\....\\.......|.......|.-....|.../.../.......-.....\\-.........
|................-......................-............./.......\\.............\\................................\\
\\|.............../........................\\......|.|..............\\.........-...-....-.....\\...........-......
...............|..-............|..........|..|./-....|--.............-.../..........................\\......|..
.....-|.............................\\\\...........-.........||......|....-..-.......-..............-\\..........
...\\....\\......|.......\\|.......|...........-.......-.....\\......|..........|.........\\.......\\...............
...........\\.../........|.|............\\./.-\\...././...........\\...\\............../-......//|...\\.............
.............\\......-...../.................|....../.................................--.-..............\\......
..-..../....-............|................./................../......\\...../......-................./........|
..\\......\\............................\\..||....\\......................-..................../.|..|.../../\\...|.
..|.........\\...../................/...............\\......|..............\\.........-..\\.............../.....-.
....\\.................\\-......|.-..-..-..|...............-.-..\\.......|...................../.................
............../...........-..\\..|.................|......\\..|.......\\.-..-.../.......|....-..................\\
........../.....-......./....-...\\..................|....|../..|....../-.........|....../.........../..|\\|/...
...............................-......\\........................./............|..\\..................|.....|...|
....\\............|............/..................\\-.......\\...............|......................-.........|/.
-.......|...................\\..\\......|./............................//.|.....-.............|.........|...|...
............-...|.......-../\\......../..........|.-.........................-.................................
............../.....-......|./..............................\\.\\../\\..................-........................
...........................-...............................................|.......\\................|.......\\.
.-.........-...\\...........|......./...|........|.........|-|.................\\............/..................
....\\....-...|--...-.|............../..-........\\....................../\\.................-........-..........
......|..................-......\\|.......|........-....\\..........|.............-.............\\../....../.....
..............-.|.|.........-..........\\............./-.....\\............-..\\..\\..........|.......--..........
...........|.............-............|....-......\\......./.....||-...........|.|-........./....|..|...-...../
..../.......-|..........|.................................-......\\.................-...|...............-......
..|.|\\.........................../.....................|.......-........../......-\\..|...-..|....-..........-.
.../....\\........-.....|...-...-.|....../.........../......|.............\\...\\...../...........|.\\............
...............................\\......\\..-.\\......................\\................../....|\\......|..........-
....|.................--............//....|.....|.....-..........-.......................................|....
........-.........................\\....../...................|\\..........|........|.................-...-.....
............-...../.-..........-.............\\................/.......\\...........|.......|............/..-../
.\\.-............................/...././.........../............\\......-......................................
.....-....-.-|......./...................../......../....../..........-.................-..............-|.....
.....\\.-...-................../..-................|............././..........................-..../......\\....
......-....\\.........-.....|.........\\.............../...............|...../.|.........../................\\...
..|...\\.............-....../.......................|.......-.............|....................../|............
...........|..............-........./...............................\\................\\/...|-.............-....
......-......\\.....\\...........|..................................-......./............................\\......
....|...................../.....................................-/\\..............-.............\\\\.............
.....|....-.........-.-..../...................../......................................./|......./....../....
../...................-\\........../-..|..-..|........./................|...........-...............\\..........
..\\......./............\\....\\.......--...\\...............-..\\......-....................\\.|....|..........\\...
../........../.../|....|..|.............../..../.....-..-........................................\\|../........
...\\.................-...|..................|................//............\\.........\\........-/..............
..............\\/..........................|........||...............|.....|....\\....\\...../...-.|./.....\\.....
......\\....................|......................-.\\....-.......................-...../.|......./..../....\\..
............................-......................|./..-|....\\.-..|..........-.................\\...\\./|......
...................\\............................../...................|.....-./...../...........-........\\....
.....|.\\.......|..-.......\\.........................\\......../......../.../.|.............-........../........
................./-................................................-/......\\\\............-.........|..-.......
.............\\../.|.................................-.........|./.....................-........\\\\..\\.....-....
\\......../..............-/................\\.............|...|.................................../..\\..........
................./.......................\\....-......................../...\\.|..|.............................
/...........\\........|..........\\..........................\\.......................-..../.......|........../..
.......-..|......./................\\...................................|............../.\\..........\\....../...
......................./.|.................|........-|...............\\.|...-..................|...|......./...
-.|.......-./.................\\.....|.................................................|..\\.........\\..........
.|..-............/.|............/|-..........\\..................-..../...............\\......./../..\\.-........
........\\.-..\\\\.......\\...../..|......-.-..\\.....\\/................................/..........-.....\\|...../..
......./../../\\...................-........./...-....\\......\\........................\\............|...-.......
.-....|.....\\......\\.....|.|...../.........\\..\\....................|...........\\...|....................../...
.............../...../.........|....../....-....................|.....................\\.......|...|...........
....\\........../--|............../..............-.....|....\\....-.-................................./.....\\...
........|....\\.........../........|..|......|...................-..\\.../......../............\\.\\...../........
../.....|............................/......................./.......\\........\\.........../...........\\../.\\..
....|..\\...../.\\.........................................................................\\....................
/../.........................|||...........|...\\-.\\../......\\..-............-.../.....-.|.....................
.................|...............|...................................................................-./......
...|../.....................\\...................-......|/............................................\\.//../..
|./........-........./....\\...............|.........................|......|........|.\\....../............../.
........\\................|.|....................../............|......\\.......................|.......-.......
-...........|.........|/......|/....................-..................-.....|....|./.........................
.........\\..../..|..../...\\.....|........-.....-..|../.-.........................|............................
........|.-/.....|.......|......././.........................-...............\\......-.....|...................
.-...................|.......\\..........................................\\-../.................-............|..
..-..................../........../..........\\.........................-.................-..../-.........|....
........\\.........\\...........-|......../...-........-............\\\\/...........|..|....../.../............\\.\\
................................\\.....\\.-..............-................./...................|..............-.
................\\.|..\\/......\\.||................-.........|.....................\\.|................-.........
...................-................\\.............-|......./............|.-.............|..................|..
........|...|...-.\\.............\\..................|..-|.............\\........\\..-.....\\....................-.
..../........./\\.....-.......\\..........|..|...-........................................|.....................
.-...-.....-\\............-|../...\\.........../....-............./..........|................................./
......\\.....|.|\\...../...|..............\\...................-.................................\\............\\..
.........................|..-..............-...|........|......................-..............................
...../..\\................/...............-......\\.............|.......-.......|\\............./.\\..-...........
...../.\\.......\\.............\\.......................................-...\\.....//......\\......................
.....-..\\.../.-......|/../../........|...........-...\\|..........-.............../.......|..\\................/
............\\.....\\.../......\\..............|....../........\\./..-..\\....\\....-...............................
....................................-./................................\\.............../............/\\...../.-
..................-\\...-..\\....-......................-.....................-............-............./..\\...
.......\\..............\\......-......|...|/......................................................\\.|..|........
.........-|............./.............../..............-..................|...............\\................/..
..............\\.............\\-......................\\.../-|.................../...........|.............|.....
..............-......................../......--.................|-....\\..|............./.....|.....\\....-....
........|....../...................\\....\\.......-|.......\\..........|...................................\\.//..
.............|..........................-..........\\......................-.......-......./............./.....
..-.\\-................................../\\...|....-\\....|...............\\........./.........../....|..\\....../
....-....\\...-../.......|...../...\\........................-...................-.|........../../......|......\\
..................\\.|............................................./|..................--......................
....|../........./...-..-.........../.../......................\\....../................\\\\.............-.../...
..\\....|............|...................................../.....\\.....|....\\.|...................\\............
..............\\.......................\\.........-............|./..../--|.........................-...-........
......................../...............................................................................\\|/...
..............................................-..-...\\........................|-....................\\.........
........./..........-...../..........|................................\\................................/......`;
const map = input.split('\n');
const totalRows = map.length;
const totalColumns = map[0].length;

let maximumEnergizedTile = 0;
for (let column = 0; column < totalColumns; column++) {
  // comes from the top
  maximumEnergizedTile = Math.max(
    maximumEnergizedTile,
    countEnergizedTiles({
      row: 0,
      column,
      deltaRow: 1,
      deltaColumn: 0,
    })
  );
  // comes from the bottom
  maximumEnergizedTile = Math.max(
    maximumEnergizedTile,
    countEnergizedTiles({
      row: totalRows - 1,
      column,
      deltaRow: -1,
      deltaColumn: 0,
    })
  );
}

for (let row = 0; row < totalRows; row++) {
  // comes from the left
  maximumEnergizedTile = Math.max(
    maximumEnergizedTile,
    countEnergizedTiles({
      row,
      column: 0,
      deltaRow: 0,
      deltaColumn: 1,
    })
  );
  // comes from the right
  maximumEnergizedTile = Math.max(
    maximumEnergizedTile,
    countEnergizedTiles({
      row,
      column: totalColumns - 1,
      deltaRow: 0,
      deltaColumn: -1,
    })
  );
}

console.log(maximumEnergizedTile);

function countEnergizedTiles(starting) {
  const visited = new Set();
  const visitedWithDirection = new Set();
  visit(starting);
  return visited.size;

  function visit({ row, column, deltaRow, deltaColumn }) {
    if (row < 0 || column < 0 || row >= totalRows || column >= totalColumns) {
      // out of the map boundary
      return;
    }

    // prevent from going into the same tile from the same direction again!
    const key = `${row},${column},${deltaRow},${deltaColumn}`;
    if (visitedWithDirection.has(key)) return;
    visitedWithDirection.add(key);

    visited.add(`${row},${column}`);
    const type = map[row][column];
    switch (type) {
      case '.':
        visit({
          row: row + deltaRow,
          column: column + deltaColumn,
          deltaRow,
          deltaColumn,
        });
        break;
      case '|':
        if (deltaRow) {
          visit({
            row: row + deltaRow,
            column,
            deltaRow,
            deltaColumn,
          });
        } else {
          visit({
            row: row + 1,
            column,
            deltaRow: 1,
            deltaColumn: 0,
          });
          visit({
            row: row - 1,
            column,
            deltaRow: -1,
            deltaColumn: 0,
          });
        }
        break;
      case '-':
        if (deltaColumn) {
          visit({
            row,
            column: column + deltaColumn,
            deltaRow,
            deltaColumn,
          });
        } else {
          visit({
            row,
            column: column + 1,
            deltaRow: 0,
            deltaColumn: 1,
          });
          visit({
            row,
            column: column - 1,
            deltaRow: 0,
            deltaColumn: -1,
          });
        }
        break;
      case '/': {
        let newDeltaColumn = 0;
        let newDeltaRow = 0;
        if (deltaRow === 1) {
          newDeltaColumn = -1;
        } else if (deltaRow === -1) {
          newDeltaColumn = 1;
        } else if (deltaColumn === 1) {
          newDeltaRow = -1;
        } else if (deltaColumn === -1) {
          newDeltaRow = 1;
        }
        visit({
          row: row + newDeltaRow,
          column: column + newDeltaColumn,
          deltaRow: newDeltaRow,
          deltaColumn: newDeltaColumn,
        });
        break;
      }
      case '\\': {
        let newDeltaColumn = 0;
        let newDeltaRow = 0;
        if (deltaRow === 1) {
          newDeltaColumn = 1;
        } else if (deltaRow === -1) {
          newDeltaColumn = -1;
        } else if (deltaColumn === 1) {
          newDeltaRow = 1;
        } else if (deltaColumn === -1) {
          newDeltaRow = -1;
        }
        visit({
          row: row + newDeltaRow,
          column: column + newDeltaColumn,
          deltaRow: newDeltaRow,
          deltaColumn: newDeltaColumn,
        });
        break;
      }
    }
  }
}
